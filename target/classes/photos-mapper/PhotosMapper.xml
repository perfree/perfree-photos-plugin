<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.photos.mapper.PhotosMapper" >
    <update id="createPhotosTableForSqlite">
        CREATE TABLE if not exists `p_photos`  (
                  "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
                  "name" text(256),
                  `desc` text(1024),
                  `coverUrl` text(128),
                  "isEncryption" integer,
                  "password" text(64),
                  `userId` integer,
                  "createTime" DATETIME,
                  "updateTime" DATETIME
        )
    </update>

    <update id="createPhotosTableForMysql">
        CREATE TABLE if not exists `p_photos`  (
              `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键',
              `name` varchar(256) NULL DEFAULT NULL COMMENT '相册名',
              `desc` varchar(1024) NULL DEFAULT NULL COMMENT '描述',
              `coverUrl` varchar(128) NULL DEFAULT NULL COMMENT '封面url',
              `isEncryption` int(0) NULL DEFAULT 0 COMMENT '是否加密:0正常,1:加密',
              `password` varchar(64) NULL DEFAULT NULL COMMENT '密码',
              `userId` int(0) NOT NULL COMMENT '用户id',
              `createTime` datetime NULL DEFAULT NULL COMMENT '创建时间',
              `updateTime` datetime NULL DEFAULT NULL COMMENT '更新时间',
              PRIMARY KEY (`id`) USING BTREE
        )ENGINE = InnoDB CHARACTER SET = utf8mb4 ROW_FORMAT = Dynamic

    </update>

    <delete id="del">
        delete from p_photos where id = #{photosId}
    </delete>

    <select id="getList" resultType="com.photos.model.Photos">
        select id,`name`,`desc`,coverUrl,isEncryption,userId,createTime,updateTime from p_photos
        <if test="name != null and name != ''">
            <bind name="name" value="'%' + _parameter.name + '%'" />
            where `name` like #{name}
        </if>
        order by id desc limit ${page},${size}
    </select>

    <select id="getTotal" resultType="java.lang.Long">
        select count(1) from p_photos
        <if test="name != null and name != ''">
            <bind name="name" value="'%' + _parameter.name + '%'" />
            where `name` like #{name}
        </if>
    </select>

    <select id="getById" resultType="com.photos.model.Photos">
        select id,`name`,`desc`,coverUrl,isEncryption,userId,createTime,updateTime,password from p_photos where id = #{id}
    </select>


    <insert id="addPhotos" useGeneratedKeys="true" keyProperty="id" >
        insert into p_photos (`name`, `desc`, coverUrl,isEncryption,password,userId,createTime)
        VALUES (#{name},#{desc},#{coverUrl}, #{isEncryption}, #{password}, #{userId}, #{createTime})
    </insert>

    <update id="update">
        update p_photos set
        `name` = #{name},`desc`=#{desc},coverUrl=#{coverUrl},isEncryption=#{isEncryption},updateTime=#{updateTime}
        <if test="password != null and password != ''">
            ,password = #{password}
        </if>
        where id = #{id}
    </update>
</mapper>
